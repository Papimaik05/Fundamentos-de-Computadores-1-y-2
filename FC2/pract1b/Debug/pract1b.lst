
pract1b.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  0c000000  0c000000  00008000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .bss          00000004  0c000008  0c000008  00008008  2**0
                  ALLOC
  2 .text         00000040  0c00000c  0c00000c  0000800c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .ARM.attributes 00000022  00000000  00000000  0000804c  2**0
                  CONTENTS, READONLY
  4 .debug_line   0000004a  00000000  00000000  0000806e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000006a  00000000  00000000  000080b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000014  00000000  00000000  00008122  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000020  00000000  00000000  00008138  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

0c00000c <start>:
.bss
C: .space 4

.text
start:
		LDR R4, =A   //Introduzco la dirección de A en R4
 c00000c:	e59f402c 	ldr	r4, [pc, #44]	; c000040 <fin+0x8>
		LDR R5, =B   //Introduzco la dirección de B en R5
 c000010:	e59f502c 	ldr	r5, [pc, #44]	; c000044 <fin+0xc>
		LDR R6, =C   //Introduzco la dirección de C en R6
 c000014:	e59f602c 	ldr	r6, [pc, #44]	; c000048 <fin+0x10>
		LDR R1,[R4]  //Introduzco el valor que hay en la direccion de R4 en R1
 c000018:	e5941000 	ldr	r1, [r4]
		LDR R2,[R5]  //Introduzco el valor que hay en la direccion de R5 en R2
 c00001c:	e5952000 	ldr	r2, [r5]
		MOV R3,#0    //Inicializo C (C=0)
 c000020:	e3a03000 	mov	r3, #0

0c000024 <loop>:
loop:	CMP R1,R2    //Comparamos R1 y R2(A y B)
 c000024:	e1510002 	cmp	r1, r2
		BLT fin      //Si es menor que ,nos dirige a fin
 c000028:	ba000002 	blt	c000038 <fin>
		SUB R1,R1,R2 //A=A-B
 c00002c:	e0411002 	sub	r1, r1, r2
		ADD R3,R3,#1 //C=C+1
 c000030:	e2833001 	add	r3, r3, #1
		B loop       //Vuelves al origen del bucle
 c000034:	eafffffa 	b	c000024 <loop>

0c000038 <fin>:
fin:	STR R3,[R6]  //Guardas el valor que hay en R3 en la direccion de memoria de R6
 c000038:	e5863000 	str	r3, [r6]
		B .
 c00003c:	eafffffe 	b	c00003c <fin+0x4>
 c000040:	0c000000 	.word	0x0c000000
 c000044:	0c000004 	.word	0x0c000004
 c000048:	0c000008 	.word	0x0c000008
